name: SwarmDirector CI/CD with Task Management Integration

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      task_id:
        description: 'Task ID to associate with deployment'
        required: false
        type: string

env:
  PYTHON_VERSION: '3.9'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run tests
        run: |
          python scripts/run_tests.py --coverage
          
      - name: Update task status - Testing
        if: github.event.inputs.task_id
        run: |
          echo "Running tests for task ${{ github.event.inputs.task_id }}"
          
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to staging
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "Deploying to staging environment..."
          
      - name: Deploy to production
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Deploying to production environment..."
          
      - name: Update task status - Completed
        if: success() && github.event.inputs.task_id
        run: |
          echo "Deployment completed for task ${{ github.event.inputs.task_id }}"
          
      - name: Update task status - Failed
        if: failure() && github.event.inputs.task_id
        run: |
          echo "Deployment failed for task ${{ github.event.inputs.task_id }}" 